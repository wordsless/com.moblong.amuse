<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
		http://www.springframework.org/schema/context  
		http://www.springframework.org/schema/context/spring-context-4.0.xsd"
	default-autowire="byName" default-lazy-init="true">

	<!-- RabbitMQ Connection池 -->
	<bean id="RabbitConnectionPool" class="com.moblong.amuse.RabbitConnectionPool"/>
	
	<bean id="ds" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="jdbc:postgresql://123.56.188.63:5432/flipped" />
		<property name="username" value="flipped" />
		<property name="password" value="zap##123" />
		<property name="testOnBorrow" value="false" />
		<property name="testWhileIdle" value="true" />
		<!-- 连接池启动时的初始值 -->
		<property name="initialSize" value="10" />

		<!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
		<property name="maxIdle" value="50" />
		<!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
		<property name="minIdle" value="10" />
		<!--#给出一条简单的sql语句进行验证 -->
		<property name="validationQuery" value="select now()" />

		<!-- #运行判断连接超时任务的时间间隔，单位为毫秒，默认为-1，即不执行任务。 -->
		<property name="timeBetweenEvictionRunsMillis" value="3600000" />
		<!-- #连接的超时时间，默认为半小时。 -->
		<property name="minEvictableIdleTimeMillis" value="3600000" />
		<property name="defaultAutoCommit" value="false" />
	</bean>

	<bean id="JdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean name="DeviceDTO" class="com.moblong.amuse.dto.DeviceDTO" />
	<bean name="AccountDTO" class="com.moblong.amuse.dto.AccountDTO" />
	<bean name="UserDTO" class="com.moblong.amuse.dto.UserDTO" />
</beans>